<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                       http://www.springframework.org/schema/context
                       http://www.springframework.org/schema/context/spring-context-4.2.xsd
                       http://www.springframework.org/schema/aop
                       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                       http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                    http://www.springframework.org/schema/mvc 
                    http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">


	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan
		base-package="com.javen.controller,com.cpjit.swagger4j.demo.springmvc.controller" />
	<context:component-scan base-package="com.cpjit.swagger4j.support.springmvc">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />
	<!-- 静态资源处理 css js imgs -->
	<mvc:resources location="/resources/**" mapping="/resources" />
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- 配置Token拦截器，防止用户重复提交数据 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" /><!--这个地方时你要拦截得路径 我这个意思是拦截所有得URL -->
			<bean class="com.javen.interceptor.imp.TokenInterceptor" /><!--class文件路径改成你自己写得拦截器路径！！ -->
			
		</mvc:interceptor>

	</mvc:interceptors>


<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>




	<mvc:resources mapping="/**/*.css" location="/" />
	<mvc:resources mapping="/**/*.js" location="/" />
	<mvc:resources mapping="/**/*.png" location="/" />
	<mvc:resources mapping="/**/*.gif" location="/" />
	<mvc:resources mapping="/**/*.jpg" location="/" />
	<mvc:resources mapping="/**/*.ico" location="/" />
	<mvc:resources mapping="/**/*.woff" location="/" />
	<mvc:resources mapping="/**/*.woff2" location="/" />
	<mvc:resources mapping="/**/*.fft" location="/" />
	<mvc:resources mapping="/**/*.svg" location="/" />
	<mvc:resources mapping="/**/*.eot" location="/" />
	<mvc:resources mapping="/**/*.html" location="/" />
	<mvc:resources mapping="/**/*.mp3" location="/" />



	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>




	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/page" />
		<property name="suffix" value=".html" />
	</bean>






</beans>  